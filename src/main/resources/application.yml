spring:
  application:
    name: api-gateway
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 2000ms
  main:
    web-application-type: reactive
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: user-service-auth
              uri: lb://user-service
              predicates:
                - Path=/auth/**,/user/**
            - id: user-service-oauth2
              uri: lb://user-service
              predicates:
                - Path=/login/oauth2/code/google  # 구글 리다이렉트 경로 추가
            - id: user-service-oauth2-authorization
              uri: lb://user-service
              predicates:
                - Path=/oauth2/authorization/**   # OAuth2 인증 시작 경로 추가
            - id: reservation-service-reserve
              uri: lb://reservation-service
              predicates:
                - Path=/reserve/api/reservations/**
            - id: reservation-service-concert
              uri: lb://reservation-service
              predicates:
                - Path=/reserve/api/concerts/**

server:
  port: 8080
  
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,routes
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
  
jwt:
    # reservation-secret-key-ergp9wv125mnvv20598v23450v
    secret: 'cmVzZXJ2YXRpb24tc2VjcmV0LWtleS1lcmdwOXd2MTI1bW52djIwNTk4djIzNDUwdg=='
